plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.crazykim'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// lombok
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	// openAPI -> 스프링부트 상위버전에서는 아래와 같이 사용
	//implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// H2 DB
	runtimeOnly 'com.h2database:h2'

	// jsp파일 사용하기
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation group: 'org.glassfish.web', name: 'jakarta.servlet.jsp.jstl', version: '2.0.0'

	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
}

tasks.named('test') {
	useJUnitPlatform()
}
